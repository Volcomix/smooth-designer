// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders an overflow menu with a custom elevation 1`] = `
<PopoverAnimationDefault
  open={false}
  style={Object {}}
  targetOrigin={
    Object {
      "horizontal": "right",
      "vertical": "top",
    }
  }
  zDepth={2}
/>
`;

exports[`renders with a specific style if linking 1`] = `
<Sized
  className="BlockDetail BlockDetail-linking"
  onSized={[Function]}
  style={
    Object {
      "left": 10,
      "top": 20,
    }
  }
>
  <Card
    className="BlockDetail-card"
    expandable={false}
    expanded={null}
    initiallyExpanded={false}
    onMouseUp={[Function]}
  >
    <CardTitle
      className="BlockDetail-title"
      title={
        <TextField
          hintText="Name"
          inputRef={[Function]}
          onChange={[Function]}
          value="Block"
        />
      }
    />
    <CardActions
      className="BlockDetail-actions"
    >
      <IconMenu
        anchorOrigin={
          Object {
            "horizontal": "right",
            "vertical": "top",
          }
        }
        animated={true}
        animation={[Function]}
        className="BlockDetail-menu"
        clickCloseDelay={200}
        disableAutoFocus={true}
        iconButtonElement={
          <IconButton
            disableTouchRipple={false}
            disabled={false}
            iconStyle={Object {}}
            tooltipPosition="bottom-center"
            touch={false}
          >
            <NavigationMoreVert />
          </IconButton>
        }
        multiple={false}
        onClick={[Function]}
        onItemClick={[Function]}
        onKeyboardFocus={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onRequestChange={[Function]}
        open={null}
        targetOrigin={
          Object {
            "horizontal": "right",
            "vertical": "top",
          }
        }
        useLayerForClickAway={false}
      >
        <MenuItem
          anchorOrigin={
            Object {
              "horizontal": "right",
              "vertical": "top",
            }
          }
          checked={false}
          className="BlockDetail-delete"
          desktop={false}
          disabled={false}
          focusState="none"
          insetChildren={false}
          leftIcon={<ActionDeleteForever />}
          onClick={[Function]}
          primaryText="Delete block"
          targetOrigin={
            Object {
              "horizontal": "left",
              "vertical": "top",
            }
          }
        />
      </IconMenu>
      <IconButton
        className="BlockDetail-addLink"
        disableTouchRipple={false}
        disabled={false}
        iconStyle={Object {}}
        onMouseDown={[Function]}
        tooltip="Add link"
        tooltipPosition="bottom-center"
        touch={false}
      >
        <ActionSettingsEthernet />
      </IconButton>
    </CardActions>
  </Card>
</Sized>
`;

exports[`renders without crashing 1`] = `
<Sized
  className="BlockDetail"
  onSized={[Function]}
  style={
    Object {
      "left": 10,
      "top": 20,
    }
  }
>
  <Card
    className="BlockDetail-card"
    expandable={false}
    expanded={null}
    initiallyExpanded={false}
    onMouseUp={[Function]}
  >
    <CardTitle
      className="BlockDetail-title"
      title={
        <TextField
          hintText="Name"
          inputRef={[Function]}
          onChange={[Function]}
          value="Block"
        />
      }
    />
    <CardActions
      className="BlockDetail-actions"
    >
      <IconMenu
        anchorOrigin={
          Object {
            "horizontal": "right",
            "vertical": "top",
          }
        }
        animated={true}
        animation={[Function]}
        className="BlockDetail-menu"
        clickCloseDelay={200}
        disableAutoFocus={true}
        iconButtonElement={
          <IconButton
            disableTouchRipple={false}
            disabled={false}
            iconStyle={Object {}}
            tooltipPosition="bottom-center"
            touch={false}
          >
            <NavigationMoreVert />
          </IconButton>
        }
        multiple={false}
        onClick={[Function]}
        onItemClick={[Function]}
        onKeyboardFocus={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onRequestChange={[Function]}
        open={null}
        targetOrigin={
          Object {
            "horizontal": "right",
            "vertical": "top",
          }
        }
        useLayerForClickAway={false}
      >
        <MenuItem
          anchorOrigin={
            Object {
              "horizontal": "right",
              "vertical": "top",
            }
          }
          checked={false}
          className="BlockDetail-delete"
          desktop={false}
          disabled={false}
          focusState="none"
          insetChildren={false}
          leftIcon={<ActionDeleteForever />}
          onClick={[Function]}
          primaryText="Delete block"
          targetOrigin={
            Object {
              "horizontal": "left",
              "vertical": "top",
            }
          }
        />
      </IconMenu>
      <IconButton
        className="BlockDetail-addLink"
        disableTouchRipple={false}
        disabled={false}
        iconStyle={Object {}}
        onMouseDown={[Function]}
        tooltip="Add link"
        tooltipPosition="bottom-center"
        touch={false}
      >
        <ActionSettingsEthernet />
      </IconButton>
    </CardActions>
  </Card>
</Sized>
`;
